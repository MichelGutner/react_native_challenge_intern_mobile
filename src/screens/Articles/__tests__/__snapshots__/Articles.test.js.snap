// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0050F0",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingVertical": 10,
      }
    }
    testID="headerContainer"
  >
    <RNCSafeAreaView
      edges={
        Array [
          "left",
          "top",
          "right",
        ]
      }
      style={
        Object {
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "fontSize": 16,
              },
            ]
          }
        >
          0 Artigos encontrado
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "flex": 3,
            "paddingHorizontal": 15,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255,255,255, 0.08)",
                "borderRadius": 20,
                "height": 25,
                "justifyContent": "center",
                "width": 140,
              },
            ]
          }
        >
          <TextInput
            maxLength={15}
            onChangeText={[Function]}
            placeholder="Buscar..."
            placeholderTextColor="#FFF"
            style={
              Array [
                Object {
                  "color": "#FFF",
                  "fontSize": 13,
                  "paddingBottom": 2,
                  "paddingLeft": 20,
                },
              ]
            }
            value=""
          />
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "overflow": "hidden",
            }
          }
        >
          <View
            icon="search"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#fff",
                      "fontSize": 24,
                    },
                    Object {
                      "backgroundColor": "transparent",
                    },
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                testID="iconIcon"
              >
                î¢¶
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNCSafeAreaView>
  </View>
  <RCTScrollView
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View />
  </RCTScrollView>
</RCTSafeAreaView>
`;
